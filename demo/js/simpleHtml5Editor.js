// Generated by CoffeeScript 1.3.3
(function() {
  var SimpleHtml5Editor;

  SimpleHtml5Editor = (function() {

    function SimpleHtml5Editor(element, movement) {
      var btn, _i, _len, _ref;
      this.element = element;
      this.langs = ['Enter URL', 'Enter Image URL'];
      this.button_creator = [
        {
          'editor_remove_format': [
            {
              'tag': 'removeFormat',
              'format': '',
              'name': '<i title="Remove format in selection" class="icon-remove"></i>'
            }
          ]
        }, {
          'editor_formatting': [
            {
              'tag': 'bold',
              'format': '',
              'name': '<i title="Bold" class="icon-bold"></i>'
            }, {
              'tag': 'underline',
              'format': '',
              'name': '<i title="Underline" class="icon-underline"></i>'
            }, {
              'tag': 'strikeThrough',
              'format': '',
              'name': '<i title="Strike Trough" class="icon-strikethrough"></i>'
            }
          ]
        }, {
          'editor_sub': [
            {
              'tag': 'subscript',
              'format': '',
              'name': 'T<sub title="subscript">x</sub>'
            }, {
              'tag': 'superscript',
              'format': '',
              'name': 'T<sup title="superscript">x</sub>'
            }
          ]
        }, {
          'editor_lists': [
            {
              'tag': 'insertUnorderedList',
              'format': '',
              'name': '<b title="Unordered list" class=icon-list-ul></b>'
            }, {
              'tag': 'insertOrderedList',
              'format': '',
              'name': '<b title="Ordered list" class=icon-list-ol></b>'
            }
          ]
        }, {
          'editor_indentation': [
            {
              'tag': 'indent',
              'format': '',
              'name': '<b class=icon-indent-left title="Indent"></b>'
            }, {
              'tag': 'outdent',
              'format': '',
              'name': '<b class=icon-indent-right title="Outdent"></b>'
            }
          ]
        }, {
          'editor_justify': [
            {
              'tag': 'justifyLeft',
              'format': '',
              'name': '<i title="Align left" class="icon-align-left"></i>'
            }, {
              'tag': 'justifyCenter',
              'format': '',
              'name': '<i class="icon-align-center" title="Center"></i>'
            }, {
              'tag': 'justifyRight',
              'format': '',
              'name': '<i class="icon-align-right" title="Align right"></i>'
            }
          ]
        }, {
          'select': [
            {
              'tag': 'formatBlock',
              'format': 'p',
              'name': 'Paragraph'
            }, {
              'tag': 'formatBlock',
              'format': 'h1',
              'name': 'Header'
            }, {
              'tag': 'formatBlock',
              'format': 'h2',
              'name': 'Header 2'
            }, {
              'tag': 'formatBlock',
              'format': 'h3',
              'name': 'Header 3'
            }
          ]
        }, {
          'select': [
            {
              'tag': 'fontName',
              'format': 'Arial',
              'name': 'Arial'
            }, {
              'tag': 'fontName',
              'format': 'Helvetica',
              'name': 'Helvetica'
            }, {
              'tag': 'fontName',
              'format': 'Times',
              'name': 'Times'
            }, {
              'tag': 'fontName',
              'format': 'Courier',
              'name': 'Courier'
            }
          ]
        }
      ];
      _ref = this.button_creator;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        btn = _ref[_i];
        this.create_button(btn);
      }
      ($('.editor_button')).on('click', this.execcmd);
      ($('.editor_nav')).on('change', this.execcmd);
    }

    SimpleHtml5Editor.prototype.create_group = function(name, element) {
      var elem, html;
      html = "<div class='editor_group " + name + "'>";
      for (elem in element) {
        html += '<a href=# class=editor_button data-format=\"' + element[elem]['format'] + '\" data-tag=\"' + element[elem]['tag'] + '\"  >' + element[elem]['name'] + '</a>';
      }
      html += "</div>";
      return html;
    };

    SimpleHtml5Editor.prototype.create_select = function(element) {
      var elem, html;
      html = "<select class='editor_nav'>";
      for (elem in element) {
        html += '<option data-format=\"' + element[elem]['format'] + '\" data-tag=\"' + element[elem]['tag'] + '\"  >' + element[elem]['name'] + '</option>';
      }
      html += "</select>";
      return html;
    };

    SimpleHtml5Editor.prototype.create_button = function(btn) {
      var element, html, name;
      if (btn['tag']) {
        html = '<a class="editor_button" href="#" data-format=\"' + btn['format'] + '\" data-tag=\"' + btn['tag'] + '\"  >' + btn['name'] + '</a>';
      } else {
        for (name in btn) {
          element = btn[name];
          console.log(name, element);
        }
        if (name !== "select") {
          for (name in btn) {
            element = btn[name];
            html = this.create_group(name, element);
          }
        }
        if (name === "select") {
          for (name in btn) {
            element = btn[name];
            html = this.create_select(element);
          }
        }
      }
      return this.element.prepend(html);
    };

    SimpleHtml5Editor.prototype.execcmd = function(ev) {
      var data, tag, target;
      target = ev.target;
      if (($(target)).is('select')) {
        target = target[target.selectedIndex];
      } else if (!($(target)).is('a')) {
        target = ($(target)).parent()[0];
      } else if (!($(target)).is('a')) {
        target = ($(target)).parent()[0];
      }
      tag = target.dataset['tag'];
      console.log(target);
      data = target.dataset['format'];
      if (tag === 'createlink' || tag === 'insertImage') {
        data = prompt(this.langs[tag]);
      }
      if (data) {
        return document.execCommand(tag, false, data);
      }
      return document.execCommand(tag, false);
    };

    return SimpleHtml5Editor;

  })();

  (function($) {
    return $.fn.simpleHtml5Editor = function() {
      var simpleHtml5Editor;
      return simpleHtml5Editor = new SimpleHtml5Editor(this);
    };
  })($);

}).call(this);
